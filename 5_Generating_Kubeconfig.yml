---
- hosts: k8s-lb
  tasks: []

- hosts: k8s-clients
  vars:
    KUBERNETES_PUBLIC_ADDRESS: "{{ hostvars[groups['k8s-lb'][0]]['ansible_eth1']['ipv4']['address'] }}"
  tasks:
    - name: Generate Worker node configuration file
      shell: |
        kubectl config set-cluster kubernetes-the-hard-way \
          --certificate-authority=ca.pem \
          --embed-certs=true \
          --server=https://{{ KUBERNETES_PUBLIC_ADDRESS }}:6443 \
          --kubeconfig={{ item }}.kubeconfig
        kubectl config set-credentials system:node:{{ item }} \
          --client-certificate={{ item }}.pem \
          --client-key={{ item }}-key.pem \
          --embed-certs=true \
          --kubeconfig={{ item }}.kubeconfig
        kubectl config set-context default \
          --cluster=kubernetes-the-hard-way \
          --user=system:node:{{ item }} \
          --kubeconfig={{ item }}.kubeconfig
        kubectl config use-context default --kubeconfig={{ item }}.kubeconfig
      args:
        creates: "{{ item }}.kubeconfig"
        chdir: "/kthw"
      with_items: "{{ groups['k8s-nodes'] }}"

    - name: Generate Kube Proxy Configuration File
      shell: |
        kubectl config set-cluster kubernetes-the-hard-way \
          --certificate-authority=ca.pem \
          --embed-certs=true \
          --server=https://{{ KUBERNETES_PUBLIC_ADDRESS }}:6443 \
          --kubeconfig=kube-proxy.kubeconfig
        kubectl config set-credentials system:kube-proxy \
          --client-certificate=kube-proxy.pem \
          --client-key=kube-proxy-key.pem \
          --embed-certs=true \
          --kubeconfig=kube-proxy.kubeconfig
        kubectl config set-context default \
          --cluster=kubernetes-the-hard-way \
          --user=system:kube-proxy \
          --kubeconfig=kube-proxy.kubeconfig
        kubectl config use-context default --kubeconfig=kube-proxy.kubeconfig
      args:
        creates: "kube-proxy.kubeconfig"
        chdir: "/kthw"

    - name: Generating Kube Controller Manager Configuration File
      shell: |
        kubectl config set-cluster kubernetes-the-hard-way \
          --certificate-authority=ca.pem \
          --embed-certs=true \
          --server=https://127.0.0.1:6443 \
          --kubeconfig=kube-controller-manager.kubeconfig
        kubectl config set-credentials system:kube-controller-manager \
          --client-certificate=kube-controller-manager.pem \
          --client-key=kube-controller-manager-key.pem \
          --embed-certs=true \
          --kubeconfig=kube-controller-manager.kubeconfig
        kubectl config set-context default \
          --cluster=kubernetes-the-hard-way \
          --user=system:kube-controller-manager \
          --kubeconfig=kube-controller-manager.kubeconfig
        kubectl config use-context default --kubeconfig=kube-controller-manager.kubeconfig
      args:
        creates: "kube-controller-manager.kubeconfig"
        chdir: "/kthw"

    - name: Generating Kube Scheduler Configuration File
      shell: |
        kubectl config set-cluster kubernetes-the-hard-way \
          --certificate-authority=ca.pem \
          --embed-certs=true \
          --server=https://127.0.0.1:6443 \
          --kubeconfig=kube-scheduler.kubeconfig
        kubectl config set-credentials system:kube-scheduler \
          --client-certificate=kube-scheduler.pem \
          --client-key=kube-scheduler-key.pem \
          --embed-certs=true \
          --kubeconfig=kube-scheduler.kubeconfig
        kubectl config set-context default \
          --cluster=kubernetes-the-hard-way \
          --user=system:kube-scheduler \
          --kubeconfig=kube-scheduler.kubeconfig
        kubectl config use-context default --kubeconfig=kube-scheduler.kubeconfig
      args:
        creates: "kube-scheduler.kubeconfig"
        chdir: "/kthw"

    - name: Generating Admin Configuration File
      shell: |
        kubectl config set-cluster kubernetes-the-hard-way \
          --certificate-authority=ca.pem \
          --embed-certs=true \
          --server=https://127.0.0.1:6443 \
          --kubeconfig=admin.kubeconfig
        kubectl config set-credentials admin \
          --client-certificate=admin.pem \
          --client-key=admin-key.pem \
          --embed-certs=true \
          --kubeconfig=admin.kubeconfig
        kubectl config set-context default \
          --cluster=kubernetes-the-hard-way \
          --user=admin \
          --kubeconfig=admin.kubeconfig
        kubectl config use-context default --kubeconfig=admin.kubeconfig
      args:
        creates: "admin.kubeconfig"
        chdir: "/kthw"

    - name: Pull back all the kubeconfigs
      synchronize:
        mode: pull
        checksum: yes
        dest: "files/pull"
        src: "/kthw/"

- hosts: k8s-nodes
  tasks:
    - name: Distribute Kubeconfigs on Worker Nodes
      copy:
        src: "files/pull/{{ item }}"
        dest: "~/"
      with_items:
        - "{{ ansible_hostname }}.kubeconfig"
        - "kube-proxy.kubeconfig"

- hosts: k8s-masters
  tasks:
    - name: Distribute Kubeconfigs on Controller Nodes
      copy:
        src: "files/pull/{{ item }}"
        dest: "~/"
      with_items:
      - "admin.kubeconfig"
      - "kube-controller-manager.kubeconfig"
      - "kube-scheduler.kubeconfig"
